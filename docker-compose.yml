version: "3.7"

services:
  # -----------------------------
  # micro service
  # -----------------------------
  micro:
    build: .
    container_name: micro
    volumes:
      - .:/go/src/application
    networks:
      - backend
    depends_on:
      - jaeger
    ports: 
      - 8080:8080
  # -----------------------------
  # jaeger servcie 
  # -----------------------------
  jaeger:
    image: jaegertracing/all-in-one:1.20
    ports:
      - "1111:6831/udp"
      - "1112:16686"
    networks:
      - backend
      - frontend

  # -----------------------------
  # etcd servcie 0
  # -----------------------------
  etcd0:
    image: 'bitnami/etcd:latest'
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd0:2379
    ports:
      - 3379:2379
      - 3380:2380
    networks:
      - backend

  # -----------------------------
  # scope monitor
  # -----------------------------
  scope:
    image: weaveworks/scope:1.13.1
    hostname: weave-scope
    pid: "host"
    privileged: true
    ports:
      - "4040:4040"
    expose:
      - "4040"
    labels:
      - "works.weave.role=system"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
    command:
      - "--probe.docker"
      - "true"
    networks:
      - backend
      - frontend

  # -----------------------------
  # redis database
  # -----------------------------
  redis:
    hostname: redis
    image: redis
    networks:
      - backend

  # -----------------------------
  # redis UI
  # -----------------------------
  redis-commander:
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "9999:8081"
    networks:
      - backend
      - frontend
  
  # -----------------------------
  # nats message broker
  # -----------------------------
  nats:
    image: nats
    ports:
      - "9222:8222"
      - "5222:4222"
    networks:
      - backend
   
  # -----------------------------
  # postgres database
  # -----------------------------
  postgres:
    image: postgres:13.3
    restart: unless-stopped
    volumes: 
      - psql-micro:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: admin
      POSTGRES_DB: micro
    networks: 
      - backend
   
  # -----------------------------
  # postgres admin ui 
  # login username and password is PGADMIN_DEFAULT_EMAIL,PGADMIN_DEFAULT_PASSWORD
  # connect to database 
  # 1- servers -> create -> server...
  # 2- select name -> connections tab -> host(postgres), username(POSTGRES_USER),password(POSTGRES_PASSWORD)
  # -----------------------------
  pgadmin:
    image: dpage/pgadmin4:5.2
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-emadghaffariii@gmail.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-password}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
        - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-6132}:80"
    networks:
      - backend
    

# -----------------------------
# networks
# -----------------------------
networks:
  backend:
    name: backend
  frontend:
    name: frontend

# -----------------------------
# volumes
# -----------------------------
volumes: 
  psql-micro:
    driver: local
  pgadmin:
    driver: local